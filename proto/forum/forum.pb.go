// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: proto/forum/forum.proto

package forum

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message entity
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsBanned      bool                   `protobuf:"varint,6,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_proto_forum_forum_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Message) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Message) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

// GetMessages request and response
type GetMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int64                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	mi := &file_proto_forum_forum_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{1}
}

func (x *GetMessagesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMessagesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	mi := &file_proto_forum_forum_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{2}
}

func (x *GetMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetMessagesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CreateMessage request and response
type CreateMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMessageRequest) Reset() {
	*x = CreateMessageRequest{}
	mi := &file_proto_forum_forum_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageRequest) ProtoMessage() {}

func (x *CreateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMessageRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateMessageRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMessageResponse) Reset() {
	*x = CreateMessageResponse{}
	mi := &file_proto_forum_forum_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageResponse) ProtoMessage() {}

func (x *CreateMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// BanMessage request and response
type BanMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanMessageRequest) Reset() {
	*x = BanMessageRequest{}
	mi := &file_proto_forum_forum_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanMessageRequest) ProtoMessage() {}

func (x *BanMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanMessageRequest.ProtoReflect.Descriptor instead.
func (*BanMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{5}
}

func (x *BanMessageRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BanMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanMessageResponse) Reset() {
	*x = BanMessageResponse{}
	mi := &file_proto_forum_forum_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanMessageResponse) ProtoMessage() {}

func (x *BanMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanMessageResponse.ProtoReflect.Descriptor instead.
func (*BanMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{6}
}

func (x *BanMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UnbanMessage request and response
type UnbanMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbanMessageRequest) Reset() {
	*x = UnbanMessageRequest{}
	mi := &file_proto_forum_forum_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanMessageRequest) ProtoMessage() {}

func (x *UnbanMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanMessageRequest.ProtoReflect.Descriptor instead.
func (*UnbanMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{7}
}

func (x *UnbanMessageRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnbanMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbanMessageResponse) Reset() {
	*x = UnbanMessageResponse{}
	mi := &file_proto_forum_forum_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanMessageResponse) ProtoMessage() {}

func (x *UnbanMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forum_forum_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanMessageResponse.ProtoReflect.Descriptor instead.
func (*UnbanMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_forum_forum_proto_rawDescGZIP(), []int{8}
}

func (x *UnbanMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_forum_forum_proto protoreflect.FileDescriptor

const file_proto_forum_forum_proto_rawDesc = "" +
	"\n" +
	"\x17proto/forum/forum.proto\x12\x05forum\"\xa4\x01\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1b\n" +
	"\tis_banned\x18\x06 \x01(\bR\bisBanned\"B\n" +
	"\x12GetMessagesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\"W\n" +
	"\x13GetMessagesResponse\x12*\n" +
	"\bmessages\x18\x01 \x03(\v2\x0e.forum.MessageR\bmessages\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"e\n" +
	"\x14CreateMessageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"A\n" +
	"\x15CreateMessageResponse\x12(\n" +
	"\amessage\x18\x01 \x01(\v2\x0e.forum.MessageR\amessage\"#\n" +
	"\x11BanMessageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\".\n" +
	"\x12BanMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"%\n" +
	"\x13UnbanMessageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"0\n" +
	"\x14UnbanMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xb4\x02\n" +
	"\fForumService\x12F\n" +
	"\vGetMessages\x12\x19.forum.GetMessagesRequest\x1a\x1a.forum.GetMessagesResponse\"\x00\x12L\n" +
	"\rCreateMessage\x12\x1b.forum.CreateMessageRequest\x1a\x1c.forum.CreateMessageResponse\"\x00\x12C\n" +
	"\n" +
	"BanMessage\x12\x18.forum.BanMessageRequest\x1a\x19.forum.BanMessageResponse\"\x00\x12I\n" +
	"\fUnbanMessage\x12\x1a.forum.UnbanMessageRequest\x1a\x1b.forum.UnbanMessageResponse\"\x00B,Z*github.com/forum/forum-service/proto/forumb\x06proto3"

var (
	file_proto_forum_forum_proto_rawDescOnce sync.Once
	file_proto_forum_forum_proto_rawDescData []byte
)

func file_proto_forum_forum_proto_rawDescGZIP() []byte {
	file_proto_forum_forum_proto_rawDescOnce.Do(func() {
		file_proto_forum_forum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_forum_forum_proto_rawDesc), len(file_proto_forum_forum_proto_rawDesc)))
	})
	return file_proto_forum_forum_proto_rawDescData
}

var file_proto_forum_forum_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_forum_forum_proto_goTypes = []any{
	(*Message)(nil),               // 0: forum.Message
	(*GetMessagesRequest)(nil),    // 1: forum.GetMessagesRequest
	(*GetMessagesResponse)(nil),   // 2: forum.GetMessagesResponse
	(*CreateMessageRequest)(nil),  // 3: forum.CreateMessageRequest
	(*CreateMessageResponse)(nil), // 4: forum.CreateMessageResponse
	(*BanMessageRequest)(nil),     // 5: forum.BanMessageRequest
	(*BanMessageResponse)(nil),    // 6: forum.BanMessageResponse
	(*UnbanMessageRequest)(nil),   // 7: forum.UnbanMessageRequest
	(*UnbanMessageResponse)(nil),  // 8: forum.UnbanMessageResponse
}
var file_proto_forum_forum_proto_depIdxs = []int32{
	0, // 0: forum.GetMessagesResponse.messages:type_name -> forum.Message
	0, // 1: forum.CreateMessageResponse.message:type_name -> forum.Message
	1, // 2: forum.ForumService.GetMessages:input_type -> forum.GetMessagesRequest
	3, // 3: forum.ForumService.CreateMessage:input_type -> forum.CreateMessageRequest
	5, // 4: forum.ForumService.BanMessage:input_type -> forum.BanMessageRequest
	7, // 5: forum.ForumService.UnbanMessage:input_type -> forum.UnbanMessageRequest
	2, // 6: forum.ForumService.GetMessages:output_type -> forum.GetMessagesResponse
	4, // 7: forum.ForumService.CreateMessage:output_type -> forum.CreateMessageResponse
	6, // 8: forum.ForumService.BanMessage:output_type -> forum.BanMessageResponse
	8, // 9: forum.ForumService.UnbanMessage:output_type -> forum.UnbanMessageResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_forum_forum_proto_init() }
func file_proto_forum_forum_proto_init() {
	if File_proto_forum_forum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_forum_forum_proto_rawDesc), len(file_proto_forum_forum_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_forum_forum_proto_goTypes,
		DependencyIndexes: file_proto_forum_forum_proto_depIdxs,
		MessageInfos:      file_proto_forum_forum_proto_msgTypes,
	}.Build()
	File_proto_forum_forum_proto = out.File
	file_proto_forum_forum_proto_goTypes = nil
	file_proto_forum_forum_proto_depIdxs = nil
}
